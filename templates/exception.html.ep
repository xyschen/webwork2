% use Date::Format;
% use UUID::Tiny ':std';
%
% my $uuid = create_uuid_as_string(UUID_SHA1, UUID_NS_URL, $c->req->url->path->to_string)
	% . "::" . create_uuid_as_string(UUID_TIME);
% my $time = time2str('%a %b %d %H:%M:%S %Y', time);
%
% # Log the error to the Mojolicious error log
% if (config('JSON_ERROR_LOG')) {
	% log->error($c->jsonMessage($uuid, $time)) if $c->can('jsonMessage');
% } else {
	% log->error($c->textMessage($uuid, $time)) if $c->can('textMessage');
% }
%
% if (config('MIN_HTML_ERRORS')) {
	<%= include 'exception_min', uuid => $uuid, time => $time, status => 500 =%>
% } else {
	<%= include 'exception_default', uuid => $uuid, time => $time, status => 500 =%>
% }
